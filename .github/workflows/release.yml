name: "release"
on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04, windows-latest ]
    runs-on: ${{ matrix.platform }}
    env:
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: yarn install # Change this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

      - name: change updater signature
        shell: bash
        run: |
          cd src-tauri/target/release/bundle
          ls

      - name: upload artifact
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: bundles
          path: src-tauri/target/release/bundle/macos

      - name: upload artifact
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: bundles
          path: src-tauri/target/release/bundle/msi

      - name: upload artifact
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: bundles
          path: src-tauri/target/release/bundle/deb

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          token: ${{ secrets.PAT }}

      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bundles
          path: ./release

      - name: change updater signature
        shell: bash
        run: |
          cd ./release
          tag=`sed 's/^v\(.*\)/\1/' <<<"${{ steps.vars.outputs.tag }}"`
          signature=`cat './LudumDareViewer_'$tag'_x64_en-US.msi.zip.sig'`
          pub_date="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          cd ../
          cat <<<$(jq --arg pub_date "$pub_date" '.pub_date = $pub_date' update.json) >update.json
          cat <<<$(jq --arg signature "$signature" '.platforms."windows-x86_64".signature = $signature' update.json) >update.json
          cat <<<$(jq --arg tag "$tag" '.version = $tag' update.json) >update.json
          cat <<<$(jq --arg tag "$tag" '.platforms."windows-x86_64".url = "https://github.com/ikiselev1989/ld-viewer-desktop/releases/download/v'$tag'/LudumDareViewer_'$tag'_x64_en-US.msi.zip"' update.json) >update.json

      - name: Commit report
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Automatic update'
          commit_user_name: Ilya Kiselev
          commit_user_email: ikiselev1989@gmail.com
          commit_author: Ilya Kiselev <ikiselev1989@gmail.com>

      - name: Create Release
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: ./release/*.msi, ./release/*.msi.zip
          allowUpdates: true
